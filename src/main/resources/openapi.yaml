openapi: 3.0.1
info:
  title: Driver and Team API
  version: "1.0"
servers:
  - url: http://localhost:8080/api
paths:
  /driver/all:
    get:
      summary: Retrieve all drivers
      responses:
        200:
          description: A list of drivers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Driver'
  /driver/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
    get:
      summary: Get a driver by ID
      responses:
        200:
          description: A single driver
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Driver'
    put:
      summary: Update a driver by ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Driver'
      responses:
        200:
          description: The updated driver
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Driver'
    delete:
      summary: Delete a driver by ID
      responses:
        200:
          description: Driver deleted
  /driver/:
    post:
      summary: Create a new driver
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Driver'
      responses:
        201:
          description: New driver created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Driver'
  /team/all:
    get:
      summary: Retrieve all teams
      responses:
        200:
          description: A list of teams
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team'
  /team/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
    get:
      summary: Get a team by ID
      responses:
        200:
          description: A single team
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
    put:
      summary: Update a team by ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        200:
          description: The updated team
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
    delete:
      summary: Delete a team by ID
      responses:
        200:
          description: Team deleted
  /team/:
    post:
      summary: Create a new team
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        201:
          description: New team created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
components:
  schemas:
    Driver:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        country:
          type: string
        teamId:
          type: string
    Team:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        country:
          type: string